## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "TablasOMS", # The Name of the package containing the App
pkg_title = "Tablas De La OMS", # The Title of the package containing the App
pkg_description = "Tablas Graficas.", # The Description of the package containing the App
author_first_name = "Cristian", # Your First Name
author_last_name = "Heredia", # Your Last Name
author_email = "cristianvoice@gmail.com", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
usethis::use_mit_license( "MIT" )  # You can set another license here
usethis::use_readme_rmd( open = FALSE )
usethis::use_code_of_conduct()
usethis::use_lifecycle_badge( "Experimental" )
usethis::use_news_md( open = FALSE )
## Use Recommended Packages ----
golem::use_recommended_deps()
# go to dev/02_dev.R
rstudioapi::navigateToFile( "dev/02_dev.R" )
usethis::use_package( "ggplot2" )
usethis::use_package( "dashboardthemes" )
usethis::use_package( "shinydashboard" )
usethis::use_package( "dplyr" )
usethis::use_package( "lubridate" )
usethis::use_package( "plotly" )
# You're now set! ----
# go to dev/03_deploy.R
rstudioapi::navigateToFile("dev/03_deploy.R")
## Add internal datasets ----
## If you have data in your package
usethis::use_data_raw( name = "my_dataset", open = FALSE )
## Fill the DESCRIPTION ----
## Add meta data about your application
##
## /!\ Note: if you want to change the name of your app during development,
## either re-run this function, call golem::set_golem_name(), or don't forget
## to change the name in the app_sys() function in app_config.R /!\
##
golem::fill_desc(
pkg_name = "TablasOMS", # The Name of the package containing the App
pkg_title = "Tablas De La OMS", # The Title of the package containing the App
pkg_description = "Tablas Graficas.", # The Description of the package containing the App
author_first_name = "Cristian", # Your First Name
author_last_name = "Heredia", # Your Last Name
author_email = "cristianvoice@gmail.com", # Your Email
repo_url = NULL # The URL of the GitHub Repo (optional)
)
## Set {golem} options ----
golem::set_golem_options()
usethis::use_mit_license( "MIT" )  # You can set another license here
usethis::use_readme_rmd( open = FALSE )
## Add helper functions ----
golem::use_utils_ui()
golem::use_utils_server()
## Run checks ----
## Check the package before sending to prod
devtools::check()
usethis::use_package( "tidyr" )
## Run checks ----
## Check the package before sending to prod
devtools::check()
rhub::check_for_cran()
## Local, CRAN or Package Manager ----
## This will build a tar.gz that can be installed locally,
## sent to CRAN, or to a package manager
devtools::build()
library(TablasOMS)
TablasOMS::run_app()
## Add internal datasets ----
## If you have data in your package
load("data/data_craneal_05.rda")
usethis::use_data_raw( name = data_ee_05, open = FALSE )
usethis::use_data( name = data_ee_05, open = FALSE )
usethis::use_data( name = data_ee_05, open = T )
usethis::use_data( name = data_ee_05, overwrite = TRUE )
## Run checks ----
## Check the package before sending to prod
devtools::check()
?build
remove.packages("TablasOMS", lib="~/R/win-library/4.1")
install.packages("../TablasOMS_0.0.0.9000.tar.gz")
install.packages("../TablasOMS_0.0.0.9000.tar.gz", dependencies = T)
install.packages("../TablasOMS_0.0.0.9000.tar.gz", dependencies = T)
install.packages("~/aburrido/Proyecto package/Mi package/TablasOMS_0.0.0.9000.tar.gz", repos = NULL, type = "source")
source("../TablasOMS_0.0.0.9000.tar.gz")
source("../TablasOMS")
source("../TablasOMS.tar.gz")
rhub::check_for_cran()
## Local, CRAN or Package Manager ----
## This will build a tar.gz that can be installed locally,
## sent to CRAN, or to a package manager
devtools::build()
## RStudio ----
## If you want to deploy on RStudio related platforms
golem::add_rstudioconnect_file()
golem::add_shinyappsio_file()
golem::add_shinyserver_file()
install.packages("../TablasOMS_0.0.0.9000.tar.gz")
install.packages("../TablasOMS_0.0.0.9000.tar.gz", destdir = "../TablasOMS/")
install.packages("../TablasOMS_0.0.0.9000.tar.gz", dependencies = T")
install.packages("../TablasOMS_0.0.0.9000.tar.gz", dependencies = T)
install.packages("../TablasOMS_0.0.0.9000.tar.gz", dependencies = T, lib = .libPaths()[length(.libPaths())],)
install.packages("../TablasOMS.tar.gz", dependencies = T, lib = .libPaths()[length(.libPaths())],)
pkgload::package_file("../TablasOMS_0.0.0.9000.tar.gz")
runApp()
runApp()
remotes::install_local("../TablasOMS_0.0.0.9000.tar.gz")
remotes::install_local("../TablasOMS_0.0.0.9000.tar.gz")
remotes::install_local("../TablasOMS_0.0.0.9000.tar.gz")
install.packages("../TablasOMS_0.0.0.9000.tar.gz")
install.packages("../TablasOMS.tar.gz")
TablasOMS::run_app()
